// Copyright (c) 2013 AEFIS, all rights reserved.
// http://www.aefis.com/

"use strict";

var chart = {
	_init: function () {
		var self = this;
		var $chartContainer = $(this.element);
		var $chartForm = $chartContainer.find('.chartform');
		var $chartObject = null;
		var manualSubmit = false;
		var ajaxStop = false;
		if ($chartContainer) {
			if ($chartContainer.attr('data-aefis-submit-button-id')) {
				var $submitButton = $('#'+$chartContainer.attr('data-aefis-submit-button-id'));
				$submitButton.addClass('disabled');
				manualSubmit = true;
			};			
								
			$chartContainer.off('processChart').on('processChart',function () {
				processChart($chartContainer);
			});			
		};
		if (manualSubmit) {
			$(document).ajaxStart(function() {
				var $submitButton = $('#'+$chartContainer.attr('data-aefis-submit-button-id'));
				$submitButton.addClass('disabled');
			});
			$(document).ajaxStop(function() {
				var $submitButton = $('#'+$chartContainer.attr('data-aefis-submit-button-id'));
				$submitButton.removeClass('disabled');
				$submitButton.off('click').on('click',function() {
					processChart($chartContainer);
				});
			});
		};

		function getFormElements () {
			return $chartForm.find('select');
		}

		function processChart(form, initParamCount) {
			var $obj = $(form);
			var url = $obj.attr('data-aefis-datasource');
			var showLoading = $obj.attr('data-aefis-show-loading');
			var data = $obj.attr('data-aefis-series');
			var dataArray = $obj.attr('data-aefis-value-array');
			var dataContainer = $obj.attr('data-aefis-data-container');
			var deserializeData = $obj.attr('data-aefis-deserialize-data');

			if (dataContainer) {
				data = $(dataContainer).html();
			};

			var params = aefis.forms.getParameters($chartForm);
			if (data) {
				if (deserializeData) {
					data = $.parseJSON(data);
				};
				return setupChart(data);
			}

			$formElements.each(function () {
				$parameterList.find('#' + $(this).attr('id')).html($(this).find("option:selected").text());
			});

			if (++initParamCount < $parameterCount) {
				return;
			}
			if (url) {
				if ($chartObject) {
					//$chartObject.showLoading();
				}
				new aefis.ApiWrapper().call(url, {
					data: params,
					beforeSend: function(){
						if (showLoading){
							var targetid = $obj.attr('id');
							aefis.ui.loadingShow('#'+targetid,'Loading Data','quick',true,false);
						};
					},
					onComplete: function() {
						if (showLoading) {
							var targetid = $obj.attr('id');
							aefis.ui.loadingHide('#'+targetid);
						}
						ajaxStop = true;
					},
					onSuccess: function (data) {
						setupChart(data);
						$chartContainer.trigger('chartDataLoaded');
					}
				});
			} else {
				setupChart(dataArray);
			}
		}

		function setupChart(data) {
			var chartOptions = {};
			var isStockChart = false;
			if (!data || (jQuery.isEmptyObject(data) ||($.isArray(data) && !data.length))) {
				$chartContainer.find('.chart').html('<div style="padding:40px; text-align:center;"><div><span class="material-icons muted md-36">error_outline</span></div><div style="font-size:1.3em;margin-top:15px;"><strong>No Data Found</strong></div><div style="margin-top:8px;font-size:1.1em;">No records were returned for your search filters.<br/>Please select new search filters</div></div>');//.html('<div class="chart" style="text-align: center;">No data for chart.</div>');	
				return;
			}
			if (self.options.chartOptions) {
				chartOptions = $.extend(self.options.defaultOptions, self.options.chartOptions(eval(data), $chartForm));
			}
			if (chartOptions.chart.colorScheme && chartOptions.chart.colorScheme == 1) {
				Highcharts.setOptions({ colors: [ '#1f77b4', '#aec7e8', '#e377c2', '#f7b6d2', '#2ca02c', '#98df8a', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5', '#8c564b', '#c49c94',
										'#ff7f0e', '#ffbb78', '#1f77b4', '#aec7e8', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5' ]});
			} else {
				Highcharts.setOptions({ colors: [ '#ff7f0e', '#ffbb78', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', 
									'#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5', '#8c564b', '#c49c94' ]});
			}

			var height = $chartContainer.attr('data-aefis-height');

			if (height) {
				$chartContainer.find('.chart').height(height);
			}

			if ($chartContainer.attr('data-aefis-stockChart')) {
				isStockChart = true;
			};

			if (aefis.app.isStaticPage()) {
				if (!chartOptions.plotOptions) {
					chartOptions.plotOptions = {};	
				}
				if (!chartOptions.plotOptions.series) {
					chartOptions.plotOptions.series = {};	
				}
				chartOptions.plotOptions.series.animation = false;
				chartOptions.plotOptions.series.shadow = false;
			}
			if (isStockChart) {
				$chartObject = $chartContainer.find('.chart').highcharts("StockChart", chartOptions);
				Highcharts.setOptions({
					global: {
			        	useUTC: false
			        }
		    	});
			} else {
				$chartObject = $chartContainer.find('.chart').highcharts(chartOptions);
			};
			

			//$chartObject = $chartContainer.find('.chart').highcharts();
			$chartContainer.find('#drillup').unbind("click");
			$chartContainer.find('#drillup').click(function () {
				if (chartOptions.events.drillup) {
					chartOptions.events.drillup.call($chartObject);
				}
			});
			$chartContainer.find('.highcharts-legend').popover({ trigger: "hover", content: "Click the items to show or hide the related graphs.", html: true, template: "<div class='popover'><div class='arrow'></div><div class='popover-content'></div></div>" });
		}
		$chartObject = $chartContainer.find("div.chart").highcharts();
		if ($chartObject) {
			// There's an existing chart object.
			$chartObject.destroy();
			$chartObject = null;
			$chartContainer.html($chartContainer.data('aefis-chart-data-html'));
		} else {
			$chartContainer.data('aefis-chart-data-html', $chartContainer.html());
		}

		var title = $chartContainer.attr('data-aefis-title');

		if (title) {
			$chartContainer.prepend("<h3>" + $chartContainer.attr('data-aefis-title') + "</h3>");
		}
		$chartContainer.append("<div class='chart'></div>");

		var $parameterList = $chartContainer.find("div.parameters ul");
		var $formElements = getFormElements();
		var $parameterCount = $formElements.length;
		var initParamCount = 0;
		$formElements.each(function () {
			$parameterList.append("<li><span class='title'>" + $(this).attr('data-aefis-field-title') + ":</span><span id='" + $(this).attr('id') + "'></span></li>");
		});


		this.styleHighcharts();
		$chartContainer.find('.chartformbutton').one('click', function () {
		}).on('click', function (event) {
			event.stopPropagation();
		});

		
		if (!manualSubmit){
			$chartContainer.on('change', function () {
				processChart($chartContainer);
			});
		};

		if (!$parameterCount) {
			$chartContainer.change();
		}

		$chartContainer.trigger('chartDataLoaded');
	},
	select: function (selector) {
		var values = selector.split(',');
		var self = this;

		$(self.element).find("button").removeClass('active');

		if (values.length > 0) {
			$.each(values, function (i, val) {
				$(self.element).find("button[val='" + val + "']").addClass('active');			
			});			
		}
		if ($(self.element).find("button.active[val!='0']").length === 0) {
			$(self.element).find("button[val='0']").addClass('active');
		}		
	},
	getSelected: function () {
		if ($(this.element).find('li.ui-selected#all').length) {
			return null;
		}
		var selected = new Array();

		$(this.element).find('li.ui-selected').not('#all').each(function (index, item) {
			selected.push($(item).val());
		});
		return selected;
	},
	getForm: function () {
		var $chartContainer = $(this.element);
		var $chartForm = $chartContainer.find('.chartform');

		return $chartForm;
	},
	refresh: function () {
		var $chartContainer = $(this.element);
		var $chartForm = $chartContainer.find('.chartform');

		return $chartForm.change();
	},
	destroy: function () {
		var self = this;

		self.tearDown();
		$.removeData(self.element[0], self.name);
		self.element = null;
	},
	tearDown: function () {
		var self = this;
		var $chartContainer = $(this.element);
		var $chartObject = $chartContainer.find("div.chart").highcharts();

		if ($chartObject) {
			// There's an existing chart object.
			$chartObject.destroy();
			$chartObject = null;
			$chartContainer.html($chartContainer.data('aefis-chart-data-html'));
		}
	},
	options: {
		defaultOptions: {
			navigation: {
				buttonOptions: {
					enabled: false
				}
			},
			title: {
				text: null
			},
			accessibility: {
				description: 'chart'
			},
			pane: {
				size: '85%'
			},
			credits: {
				enabled: false
			}
		},
		alwaysSelectOne: false,
		setIcons: false
	},
	styleHighcharts: function () {
		/**
		 * Grid-light theme for Highcharts JS
		 * @author Torstein Honsi
		 */

		// Load the fonts
		Highcharts.createElement('link', {
			href: 'https://fonts.googleapis.com/css?family=Roboto:400,600',
			rel: 'stylesheet',
			type: 'text/css'
		}, null, document.getElementsByTagName('head')[0]);

		Highcharts.theme = {
			colors: [ '#ff7f0e', '#ffbb78', '#1f77b4', '#aec7e8', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', 
						'#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5', '#8c564b', '#c49c94' ],
			// https://github.com/mbostock/d3/wiki/Ordinal-Scales#category20
			chart: {
				backgroundColor: null,
				style: {
					fontFamily: 'Roboto',
          			'-webkit-font-smoothing': 'antialiased'
				}
			},
			title: {
				style: {
					fontSize: '16px',
					fontWeight: 'bold',
					textTransform: 'uppercase'
				}
			},
			tooltip: {
		        useHTML: true,
				shadow: true
			},
			legend: {
				itemStyle: {
					fontWeight: 'normal',
					fontSize: '10px'
				}
			},
			xAxis: {
				gridLineWidth: 0,
				gridLineDashStyle: "longdash",
				labels: {
					style: {
						//fontSize: '12px'
					}
				}
			},
			yAxis: {
				alternateGridColor: '#f7f7f7',
				minorTickInterval: 0,
				gridLineWidth: 1,
				gridLineDashStyle: "longdash",
				title: {
					style: {
						textTransform: 'uppercase'
					}
				},
				labels: {
					style: {
						fontSize: '12px'
					}
				}
			},
			plotOptions: {
				candlestick: {
					lineColor: '#404048'
				}
			},

			// General
			background2: '#F0F0EA'
			
		};
		// Apply the theme
		Highcharts.setOptions(Highcharts.theme);		
	}

	
};



$.widget("aefis.chart", chart);