// Copyright (c) 2013 AEFIS, all rights reserved.
// http://www.aefis.com/

"use strict";

var aefistagtypeahead = {

	_init: function () {
		var $field = $(this.element);
		var options = $.extend(this.defaultOptions, this.options);
		var dataOptions = this.defaultDataOptions;
		var that = this;
		var displayValue = $field.attr('data-aefis-display-value');
		var datasourceOptions = that.setDatasourceOptions($field);
		var source = new Bloodhound(datasourceOptions);

		dataOptions.displayValue = displayValue;
		dataOptions.source = source.ttAdapter();
		dataOptions.templates = {
			suggestion: Handlebars.compile(that.getTemplate($field))
		};

		$field.typeahead(options,dataOptions);
		$field.focus();
		
		this.extendTypeahead();

		$('body').off('aefisTagRemoving').on('aefisTagRemoving',function(evt, param) {
			var $tag = $(param).parent();
			var $container = $($field.attr('data-aefis-tag-container'));
			$('.aefis-tooltip').tooltip('hide').promise().done(function() {
				$tag.remove();
			});
			$container.trigger('aefisTagRemoved', $tag);
			if ($container.find('.aefis-token-inline').length == 0) {
				$container.fadeOut();
			}
		});

		that.convertUrlToTag($field);
	},

	convertUrlToTag: function(field) {
		var $field = $(field);
		var urlTag = aefis.util.getQueryParameter('tag');
		var urlKeyword = aefis.util.getQueryParameter('keywords');
		var $tagContainer = $field.attr('data-aefis-tag-container');
		var that = this;

		if (urlTag && $tagContainer) {
			var tagData = JSON.parse(urlTag);

			$(tagData).each(function() {
				var $tag = $(this);
				var css = 'aefis-keyword';
				var displayValue = $tag[0].Name;
				if ($tag[0].Css) {
					css = $tag[0].Css;
				};
				if (displayValue == displayValue.toLowerCase()){
					displayValue = aefis.util.toTitleCase(displayValue);
				}
				var suggestion = {
					"Code": $tag[0].Code,
					"Entity": $tag[0].Entity,
					"Id": $tag[0].Id,
					"Css": css,
					"Name": displayValue
				};
				that.addTagToContainer(suggestion, $tagContainer);
			});
		} else {
			that.convertDefaultsToTags($field);
		};

		if (urlKeyword && $tagContainer) {
			//var suggestion = that.createSuggestionFromInputValue($field,urlKeyword);
    		//that.addTagToContainer(suggestion, $tagContainer);
		};
		return false;
	},

	convertDefaultsToTags: function(field) {
		var $field = $(field);
		var defaultTags = $field.attr('data-aefis-tag-search-default-tags');
		var $tagContainer = $field.attr('data-aefis-tag-container');
		var that = this;
		var triggerEvent = 'false';
		if (defaultTags) {
			var suggestionArray = JSON.parse(defaultTags);
			if ($.isArray(suggestionArray)) {
				for (var i = 0; i < suggestionArray.length; i++) {
					var suggestion = suggestionArray[i];
					var lastArrayElement = suggestionArray.length - 1;
					if (lastArrayElement == i) {
						//triggerEvent = 'true';
					};
					that.addTagToContainer(suggestion, $tagContainer, triggerEvent);
				};
			} else {
				return false;
			};
		};
		return false;
	},

	toggleSubmitButton: function(field) {
		var $field = $(field);
		var fieldValue = $field.typeahead('val');
		if (fieldValue && fieldValue.length) {
   			$('#aefis-submit-tag-button').removeAttr('disabled').removeClass('disabled');
   		} else {
   			$('#aefis-submit-tag-button').attr('disabled','disabled').addClass('disabled');
   		};
	},

	bindKeypress: function(field, newField) {
		var $field = $(field);
		var $newField = $(newField);
		var $tagContainer = $field.attr('data-aefis-tag-container');
		var restrictInput = $field.attr('data-aefis-restrict-input');
		var that = this;
		var grow = false;
		if ($field.attr('data-aefis-grow-input')) {
			grow = $field.attr('data-aefis-grow-input');
		};
		$field.off('keyup').on('keyup', function (event) {
			var controlWidth = $field.attr('data-aefis-full-width');
			var originalWidth = $field.attr('data-aefis-small-width');
			if (grow == 'true') {
				if (!$field.val() || $field.val().length == 0) {
					controlWidth = originalWidth;
					that.animateLoading($field,'stop');
				};
				$field.animate({width: controlWidth},200);
			};
		});
		$field.bind('keypress', function (event) {
    		var regex = new RegExp("^[a-zA-Z0-9_ ]*$");
    		var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
    		if(event.keyCode === 13) {
    			if ($tagContainer) {
    				if ($field.typeahead('val').length) {
    					var suggestion = that.createSuggestionFromInputValue($field);
    					that.addTagToContainer(suggestion, $tagContainer);
    					that.animateLoading($field, 'stop');
    					that.clearTypeAheadField($field);
    				};
    			};
    		};
    		if (!regex.test(key) && restrictInput) {
       			event.preventDefault();
       			return false;
   			 };
   			 $newField.removeAttr('data-aefis-previous-value');
   			 that.toggleSubmitButton($field);
		});
	},

	bindFieldChange: function(field, newField) {
		var $field = $(field);
		var $newField = $(newField);
		var that = this;
		$field.bind('typeahead:change', function(ev, suggestion) {
			var fValue = $field.typeahead('val');
			var prevValue = $newField.attr('data-aefis-previous-value');
			if (!prevValue) {
				$newField.val(fValue);
			} else if (prevValue && prevValue == fValue) {
				$newField.val(fValue);
			};
			that.toggleSubmitButton($field);
		});
	},

	bindTagSelect: function(field, newField) {
		var $field = $(field);
		var $newField = $(newField);
		var $tagContainer = $field.attr('data-aefis-tag-container');
		var displayValue = $field.attr('data-aefis-display-value');
		var grow = false;
		if ($field.attr('data-aefis-grow-input')) {
			grow = $field.attr('data-aefis-grow-input');
		};
		var that = this;
		$field.bind('typeahead:select', function(ev, suggestion) {
			var fValue = suggestion[displayValue];
			var entity = suggestion['Entity'];
			var entityId = suggestion['Id'];

			that.animateLoading($field, 'stop');

			if ($tagContainer) {
				that.addTagToContainer(suggestion, $tagContainer);
				that.clearTypeAheadField($field);
			} else {
				var falseContainer = that.createFalseContainer($field, suggestion);
				$field.hide().after(falseContainer);
				$('#aefis-false-container .aefis-field-clear').off('click').on('click',function(){
					$('#aefis-false-container').remove();
					$field.show();
					$field.typeahead('val','').focus();
					$newField.val('');
				});
			};

			if (entity && entityId) {
				fValue = entity+'-'+entityId;
			};
			$newField.val(fValue);
			$newField.attr('data-aefis-previous-value', fValue);
			if (grow) {
				var width = $field.attr('data-aefis-small-width');
				if (!$field.val() || $field.val().length == 0) {
					$field.animate({width: width},200);
				}
			}
		});
	},

	bindAjaxRequests: function(field) {
		var $field = $(field);
		var that = this;
		$field.bind('typeahead:asyncrequest', function(ev, suggestion) {
			that.animateLoading($field, 'start');
		});

		$field.bind('typeahead:asyncreceive', function(ev, suggestion) {
			that.animateLoading($field, 'stop');
		});
	},

	createNewField: function(field) {
		var $field = $(field);
		var fieldId = $field.attr('id');
		var fieldName = $field.attr('name');
		var fieldDataObject = $field.attr('data-aefis-object');
		var newInputField = '<input type="hidden" id="'+fieldId+'" name="'+fieldName+'" ';
		var randomNumber = Math.floor(Math.random()*100);

		if (fieldDataObject) {
			newInputField += 'data-aefis-object="'+fieldDataObject+'" ';
		};
		newInputField += '/>';
		var newId = 'aefis-token-field-'+randomNumber;

		$field.attr('id', newId);
		$field.addClass('aefis-typeahead-generated-field');
		$field.attr('name', newId);
		$field.removeAttr('aefis-data-object');
		$field.after(newInputField);

		return $('#'+fieldId);
	},

	createFalseContainer: function(field, suggestion) {
		var $field = $(field);
		var fieldWidth = $field.width();
		var $falseContainer = $('#aefis-false-container');
		var mdc = false;
		var additionalClasses = '';
		if ($field.hasClass('aefis-mdc-tag-typeahead')) {
			mdc=true;
			additionalClasses = ' aefis-mdc-false-field';
		}
		if ($('.aefis-modal-dialog').length) {
			var $modal = $('.aefis-modal-dialog').find('#aefis-false-container').first();
			var modalId = $modal.attr('id');
			$falseContainer = $('#'+modalId).find('#aefis-false-container');
		};
		var that = this;
		var token = that.getFormattedTag(suggestion);

		$falseContainer.remove();
		$field.show();
		
		var falseContainer = '<div id="aefis-false-container" class="aefis-false-field ' + additionalClasses + '" style="width:'+fieldWidth+'px">'+token+'<a href="javascript:void(0);" class="aefis-field-clear"></a></div>';
		$field.hide().after(falseContainer);
	},

	addTagToContainer: function(suggestion, container, triggerEvent) {
		var that = this;
		var token = that.getFormattedTag(suggestion, true);
		var $parents = $(container).parents();
		if ($parents.find('.aefis-modal-dialog').length) {
			var $modal = $(container).parents().find('.aefis-modal-dialog').first();
			var modalId = $modal.attr('id');
			container = '#' + modalId + ' ' + container;
		};

		aefis.forms.addTagToContainer(suggestion,container,triggerEvent);
	},

	showMainContainer: function() {
		var $container = $('div.aefis-tag-search-parameters-container-parent');
		$container.animate({height: 40}).promise().done(function(){
			$('.aefis-manager-tag-search').addClass('aefis-has-tags');
		});
	},

	hideMainContainer: function() {
		var $container = $('div.aefis-tag-search-parameters-container-parent');
		$container.animate({height: 0}).promise().done(function(){
			$('.aefis-manager-tag-search').removeClass('aefis-has-tags');
		});
	},

	getFormattedTag: function(suggestion, allowRemove, showTooltip) {
		var $field = $(this.element);
		var token = aefis.ui.getFormattedTag(suggestion, allowRemove, showTooltip, $field);

		return token;
	},

	getTemplate: function(field) {
		var $field = $(field);
		var template = $field.attr('data-aefis-template');
		var templateid = $field.attr('data-aefis-template-id');

		if (templateid) {
			template = $('#'+templateid).html();
		};

		return template;
	},

	createSuggestionFromInputValue: function(field, val) {
		if (val) {
			var fieldValue = val;
		} else {
			var $field = $(field);
			var fieldValue = $field.typeahead('val');
		};
		
		var suggestion = {
			"Code": fieldValue,
			"Entity": 'Keyword',
			"Id": fieldValue,
			"Css": 'aefis-keyword',
			"Name": fieldValue
		};

		return suggestion;
	},

	setDatasourceOptions: function(field) {
		var $field = $(field);
		var displayValue = $field.attr('data-aefis-display-value');
		var datasourceOptions = {
			datumTokenizer: Bloodhound.tokenizers.obj.whitespace(displayValue),
			queryTokenizer: Bloodhound.tokenizers.whitespace
		};
		var that = this;
		// remote settings if available
		datasourceOptions = that.remote($field, datasourceOptions);
		// prefetch if available
		datasourceOptions = that.prefetch($field, datasourceOptions);
		return datasourceOptions;
	},

	remote: function(field, datasourceOptions) {
		var $field = $(field);
		var entityList = $field.attr('data-aefis-datasource-entity-list');
		var datasourceVariable = $field.attr('data-aefis-datasource-variable');
		var remote = $field.attr('data-aefis-datasource');
		var defaultDatasourceVariable = 'q';

		if (entityList) {
			remote += '&entityList='+entityList;
		};

		if (datasourceVariable) {
			defaultDatasourceVariable = datasourceVariable;
		}
		datasourceOptions.remote = {
			url: remote,
			rateLimitWait: 1000,
			prepare: function(query, settings) {
				var url = settings.url;
				url += '&';
				url += defaultDatasourceVariable+'='+query;
				settings.url = url;
				return settings;
			},
			transform: function(data){
				return data.DATA;
			}
		}
		return datasourceOptions;
	},

	prefetch: function(field, datasourceOptions) {
		var $field = $(field);
		var prefetch = $field.attr('data-aefis-datasource-prefetch');
		if (prefetch) {
			datasourceOptions.prefetch = {
				url: prefetch,
				ttl: 30000,
				transform: function(data){
					return data.DATA;
				}
			}
		};
		return datasourceOptions;
	},

	animateLoading: function(field, action) {
		var $field = $(field);
		if (action == 'start') {
			$field.parent().addClass('aefis-ajaxLoading');
		} else {
			$field.parent().removeClass('aefis-ajaxLoading');
		}
	},

	clearTypeAheadField: function(field) {
		var $field = $(field);
		$field.typeahead('val','');
	},

	extendTypeahead: function () {
		var $field = $(this.element);
		var that = this;
		var $newField = that.createNewField($field);
		
		that.bindAjaxRequests($field);
		that.bindTagSelect($field, $newField);
		that.bindFieldChange($field, $newField);
		that.bindKeypress($field, $newField);
		
	},

	defaultOptions: {
		minLength: 2,
		highlight: true
	},
	defaultDataOptions: {
		limit: 50
	}
};

$.widget("aefis.aefistagtypeahead", aefistagtypeahead);

